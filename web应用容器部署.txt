1. 准备环境配置文件
- 在 /home/blog_demo 目录下创建 .env.prod 文件:
cd /home/blog_demo
vim .env.prod

- 添加以下内容:
MYSQL_ROOT_PASSWORD=davidwang
NEXT_PUBLIC_API_URL=http://localhost:3000
NEXT_PUBLIC_API_URL_IP=http://192.168.3.42:3000
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_URL_IP=http://192.168.3.42:3000
NEXTAUTH_SECRET=6c75526eabd00d910ca93e9fd3d4c61e1cd01a441a23c645c27ef13889562230

2. 构建并启动应用容器
- 使用 docker-compose.prod.yml 启动服务:
# 构建并启动容器
docker-compose -f docker-compose.prod.yml --env-file .env.prod up -d --build

- 查看构建和启动日志:
# 查看构建过程
docker-compose -f docker-compose.prod.yml logs -f app


docker-compose.prod.ym
‘’‘
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: blog_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: blog
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - blog_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog_app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - MYSQL_URL=mysql://root:${MYSQL_ROOT_PASSWORD}@mysql:3306/blog
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL},${NEXT_PUBLIC_API_URL_IP}
      - NEXTAUTH_URL=${NEXTAUTH_URL},${NEXTAUTH_URL_IP}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NODE_ENV=production
    depends_on:
      - mysql
    networks:
      - blog_network

volumes:
  mysql_data:

networks:
  blog_network:
    driver: bridge
’‘’


3. 初始化应用数据
- 进入应用容器:
docker exec -it blog_app sh

- 在容器内执行数据库迁移:
# 生成 Prisma 客户端
npx prisma generate

# 执行数据库迁移
npx prisma migrate deploy

- 退出容器:
exit

4. 验证部署
- 检查容器状态:
docker ps
# 确保 blog_mysql 和 blog_app 都在运行

- 检查应用日志:
docker logs blog_app

- 访问应用:
在浏览器中访问 http://localhost:3000
或者使用 curl 测试:curl http://localhost:3000


5. 常用维护命令
# 重启应用
docker-compose -f docker-compose.prod.yml restart app

# 查看应用日志
docker-compose -f docker-compose.prod.yml logs -f app

# 停止所有服务
docker-compose -f docker-compose.prod.yml down

# 重新构建并启动（代码更新时使用）
docker-compose -f docker-compose.prod.yml up -d --build --force-recreate app




https://01291128.sdcloud.one/#/login
https://xn--5hqx9equq.com/#/login








